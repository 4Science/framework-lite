29/10/10

ANTLR GRAMMAR ASCII CHARS

Classes inside this package are generated by means of the grammar contained 
in file grammar.g except for the class CustomEvaluator.

If any updating is needed in the grammar then these classes must be regenerated
using this command:

java -classpath antlr-2.7.5.jar antlr.Tool grammar.g

======WARNING!!!!!!
The specified grammar expects  that all the boolean clauses must be & (AND), | (OR), ^ (NOT)
Using these signs as boolean operators means that these signs CAN'T BE BE USED inside the query

Attenzione che NON è legale l'utilizzo di spazi dopo uno degli operatori se questi sono seguiti da una parentesi
tonda. Questo perché lo spazio è assimilato ad una parte di un'espressione da valutare e il suo utilizzo 
indurrebbe il parser a pensare che dopo l'operatore ci sia un'espressione mentre c'è una parentesi
ES:
1- (A & B & (C & D)) NON FUNZIONA!!!
2- (A & B &(C & D)) FUNZIONA

La prima non funziona perché dopo la clausola B c'è & seguita da uno spazio
e da una parentesi ma questo vuol dire che tra & e la parentesi c'è un'espressione
Ma questo è errato. Pertanto ogni volta che c'è la necessità di avere delle sottocondizioni 
(individuatte da parentesi) bisogna accertarsi che la tonda aperta sia preceduta SENZA SPAZI
dall'operatore booleano che si vuole usare!!!!!

Lo stesso ragionamento vale per la parentesi chiuse o aperte nestate. 
Esempi:
1A- ((A | B) & C) FUNZIONA
1B- ( (A | B) & C) NON FUNZIONA!

2A- (C &(A | B)) FUNZIONA
2A- (C &(A | B) ) NON FUNZIONA!

 
 

Round brackets can be used inside the query ONLY to alter default precedence rules.
If any round brackets are neede then they must be replaced with squared ones.

The query must be surrounded by round brackets even if there is only one clause

